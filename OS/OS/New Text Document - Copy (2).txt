[18bcs073@mepcolinux ex10]$cat ex10.prn
Script started on Friday 12 February 2021 04:02:02 PM IST
[18bcs073@mepcolinux ex10]$cat head.h
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define TB 100
void allocate();
void deallocate();
void display();
int BFull();
struct Sequence
{
    char n[30];
    int len;
    int st;
}F[30];

[18bcs073@mepcolinux ex10]$cat imp.c
#include"head.h"
int Table[TB],pos,r,i,j,ch,B=0;
char fn[30];
void allocate()
{
   printf("\nEnter File Name : ");
   scanf("%s",&(F[pos].n));
   printf("\nEnter File Length : ");
   scanf("%d",&(F[pos].len));
   if(BFull())
   {
       pos--;
       printf("\n\nNo Enough Free Space Available \n");
       return;
   }
   while(1)
   {
        i=0;
        r=(rand()%TB+1);
        if(r+F[pos].len-1>TB)
           continue;
        if(Table[r]==0)
        {
                for(i=r+1;i<r+F[pos].len;i++)
                    if(Table[i]==1)
                        break;
        }
        if(i==r+F[pos].len)
            break;


    }
    F[pos].st=r;
    for(i=r;i<r+F[pos].len;i++)
        Table[i]=1;
    printf("\n\tFile Allocation Table\n");
    printf("\nFileName\tStart\tLength\n");
    for(i=1;i<=pos;i++)
    {
        printf("\n%s\t\t%d\t%d",F[i].n,F[i].st,F[i].len);
        printf("\n");
    }}
    void deallocate()
{
   printf("\nEnter The File Name : ");
   scanf("%s",&fn);
   for(i=1;i<=pos;i++)
   {
            if(strcmp(F[i].n,fn)==0)
            {
                    for(j=F[i].st ;j<(F[i].len+F[i].st);j++)
                        Table[j]=0;
                    strcpy(F[i].n,"NULL");
                    F[i].st=0;
                    F[i].len=0;
                    printf("\nFile (%s) Deleted Successfully \n",fn);
                    break;
            }
            else
                printf("\nDeletion Unsuccessful\n");
    }
    printf("\n\t\tFile Allocation Table\n");
    printf("\nFileName\tStart\tLength\n");
    for(i=1;i<=pos;i++)
    {
        printf("\n%s\t\t%d\t%d",F[i].n,F[i].st,F[i].len);
        printf("\n");
    }
}
void display()
{
    printf("\nEnter The File Name : ");
    scanf("%s",fn);
    printf("\nBlocks Allocated Are : ");
    for(i=1;i<=pos;i++)
    {
        if(strcmp(F[i].n,fn)==0)
        {
            for(j=F[i].st;j<(F[i].st+F[i].len);j++)
                printf("--%d--",j);
            break;
        }
    }
}
int BFull()
{
    for(i=1,B=0;i<=pos;i++)
        B=B+F[i].len;
    if(B>TB)
        return 1;
    else
        return 0;
}

[18bcs073@mepcolinux ex10]$cat app.c
#include"head.h"
int Table[TB],pos=0,r,i,j,ch;
char fn[30];
void main()
{
     printf("\n Contiguous File Allocation \n\n");
     do{
     printf("\n\n1.Allocate\n2.Deallocate\n3.Display\n4.Exit");
     printf("\n\nEnter Your choice : ");
     scanf("%d",&ch);
     switch(ch)
     {
                case 1:
                    pos++;
                    allocate();
                    break;

                case 2:
                    deallocate();
                    break;

                case 3:
                    display();
                    break;

                case 4:
                    exit(0);

                default:
                    printf("\nInvalid Choice ");
        }
     }while(ch!=4);

}
[18bcs073@mepcolinux ex10]$cat makefile
out.exe: imp.o app.o
        cc imp.o app.o -o out.exe
app.o:app.c
        cc -c app.c
imp.o:imp.c
        cc -c imp.c
[18bcs073@mepcolinux ex10]$./out.exe

 Contiguous File Allocation



1.Allocate
2.Deallocate
3.Display
4.Exit

Enter Your choice : 1

Enter File Name : we

Enter File Length : 4

        File Allocation Table

FileName        Start   Length

we              84      4


1.Allocate
2.Deallocate
3.Display
4.Exit

Enter Your choice : 2

Enter The File Name : are

Deletion Unsuccessful

                File Allocation Table

FileName        Start   Length

we              84      4


1.Allocate
2.Deallocate
3.Display
4.Exit

Enter Your choice : 1

Enter File Name : are

Enter File Length : 5

        File Allocation Table

FileName        Start   Length

we              84      4

are             78      5


1.Allocate
2.Deallocate
3.Display
4.Exit

Enter Your choice : 3

Enter The File Name : are

Blocks Allocated Are : --78----79----80----81----82--

1.Allocate
2.Deallocate
3.Display
4.Exit

Enter Your choice : 2

Enter The File Name : we

File (we) Deleted Successfully

                File Allocation Table

FileName        Start   Length

NULL            0       0

are             78      5


1.Allocate
2.Deallocate
3.Display
4.Exit

Enter Your choice : 1

Enter File Name : file

Enter File Length : 5

        File Allocation Table

FileName        Start   Length

NULL            0       0

are             78      5

file            16      5


1.Allocate
2.Deallocate
3.Display
4.Exit

Enter Your choice : 3

Enter The File Name : file

Blocks Allocated Are : --16----17----18----19----20--

1.Allocate
2.Deallocate
3.Display
4.Exit

Enter Your choice : 4
[18bcs073@mepcolinux ex10]$exit
exit
